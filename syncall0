#!/usr/bin/env zsh

#____________________//Personal sync script for//______________________________#
#______      ______                                           _           _____#
#_____      / ____ \________ _   ______ ___  ____  __________(_)____       ____#
#____      / / __ `/ ___/ _ \ | / / __ `__ \/ __ \/ ___/ ___/ / ___/      _____#
#___      / / /_/ (__  )  __/ |/ / / / / / / /_/ / /  / /  / (__  )      ______#
#____     \ \__,_/____/\___/|___/_/ /_/ /_/\____/_/  /_/  /_/____/      _______#
#_____     \____/                                                      ________#
#______________________________________________________________________________#

# Much of this code was repurposed from Mike McQuaid's Strap repository
# https://github.com/MikeMcQuaid/strap

#. . . . . . . . . . . . . . . . _,,,--~~~~~~~~--,_
#. . . . . . . . . . . . . . ,-' : : : :::: :::: :: : : : : :º '-, ITS A TRAP!
#. . . . . . . . . . . . .,-' :: : : :::: :::: :::: :::: : : :o : '-,
#. . . . . . . . . . . ,-' :: ::: :: : : :: :::: :::: :: : : : : :O '-,
#. . . . . . . . . .,-' : :: :: :: :: :: : : : : : , : : :º :::: :::: ::';
#. . . . . . . . .,-' / / : :: :: :: :: : : :::: :::-, ;; ;; ;; ;; ;; ;; ;\
#. . . . . . . . /,-',' :: : : : : : : : : :: :: :: : '-, ;; ;; ;; ;; ;; ;;|
#. . . . . . . /,',-' :: :: :: :: :: :: :: : ::_,-~~,_'-, ;; ;; ;; ;; |
#. . . . . _/ :,' :/ :: :: :: : : :: :: _,-'/ : ,-';'-'''''~-, ;; ;; ;;,'
#. . . ,-' / : : : : : : ,-''' : : :,--'' :|| /,-'-'--'''__,''' \ ;; ;,-'/
#. . . \ :/,, : : : _,-' --,,_ : : \ :\ ||/ /,-'-'x### ::\ \ ;;/
#. . . . \/ /---'''' : \ #\ : :\ : : \ :\ \| | : (O##º : :/ /-''
#. . . . /,'____ : :\ '-#\ : \, : :\ :\ \ \ : '-,___,-',-`-,,
#. . . . ' ) : : : :''''--,,--,,,,,,¯ \ \ :: ::--,,_''-,,'''¯ :'- :'-,
#. . . . .) : : : : : : ,, : ''''~~~~' \ :: :: :: :'''''¯ :: ,-' :,/\
#. . . . .\,/ /|\\| | :/ / : : : : : : : ,'-, :: :: :: :: ::,--'' :,-' \ \
#. . . . .\\'|\\ \|/ '/ / :: :_--,, : , | )'; :: :: :: :,-'' : ,-' : : :\ \,
#. . . ./¯ :| \ |\ : |/\ :: ::----, :\/ :|/ :: :: ,-'' : :,-' : : : : : : ''-,,
#. . ..| : : :/ ''-(, :: :: :: '''''~,,,,,'' :: ,-'' : :,-' : : : : : : : : :,-'''\\
#. ,-' : : : | : : '') : : :¯''''~-,: : ,--''' : :,-'' : : : : : : : : : ,-' :¯'''''-,_ .
#./ : : : : :'-, :: | :: :: :: _,,-''''¯ : ,--'' : : : : : : : : : : : / : : : : : : :''-,
#/ : : : : : -, :¯'''''''''''¯ : : _,,-~'' : : : : : : : : : : : : : :| : : : : : : : : :
#: : : : : : : :¯''~~~~~~''' : : : : : : : : : : : : : : : : : : | : : : : : : : : :

#-------------------------------------------------------------------------------
#Copyright (C) 2015 by Mike McQuaid

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#THE SOFTWARE.
#-------------------------------------------------------------------------------

sudo_askpass() {
  if [ -n "$SUDO_ASKPASS" ]; then
    sudo --askpass "$@"
  else
    sudo "$@"
  fi
}

cleanup() {
  set +e
  sudo_askpass rm -rf "$SUDO_ASKPASS" "$SUDO_ASKPASS_DIR"
  sudo --reset-timestamp
  if [ -z "$SYNC_SUCCESS" ]; then
    if [ -n "$SYNC_STEP" ]; then
      echo "!!! $SYNC_STEP FAILED" >&2
    else
      echo "!!! FAILED" >&2
    fi
  fi
}

trap "cleanup" EXIT

if [ -n "$SYNC_DEBUG" ]; then
  set -x
else
  SYNC_QUIET_FLAG="-q"
  Q="$SYNC_QUIET_FLAG"
fi

STDIN_FILE_DESCRIPTOR="0"
[ -t "$STDIN_FILE_DESCRIPTOR" ] && SYNC_INTERACTIVE="1"

# We want to always prompt for sudo password at least once rather than doing
# root stuff unexpectedly
sudo --reset-timestamp

# functions for turning off debug for use when handling the user password
clear_debug() {
  set +x
}

reset_debug() {
  if [ -n "$SYNC_DEBUG" ]; then
    set -x
  fi
}

# Initialise (or reinitialise) sudo to save unhelpful prompts later
sudo_init() {
  if [ -z "$SYNC_INTERACTIVE" ]; then
    return
  fi

  local SUDO_PASSWORD SUDO_PASSWORD_SCRIPT

  if ! sudo --validate --non-interactive &>/dev/null; then
    while true; do
      read -rsp "--> Enter your password (for sudo access):" SUDO_PASSWORD
      echo
      if sudo --validate --stdin 2>/dev/null <<<"$SUDO_PASSWORD"; then
        break
      fi

      unset SUDO_PASSWORD
      echo "!!! Wrong password!" >&2
    done

    clear_debug
    SUDO_PASSWORD_SCRIPT="$(
      cat <<ZSH
#!/bin/zsh
echo "$SUDO_PASSWORD"
ZSH
    )"
    unset SUDO_PASSWORD
    SUDO_ASKPASS_DIR="$(mktemp -d)"
    SUDO_ASKPASS="$(mktemp "$SUDO_ASKPASS_DIR"/SYNC-askpass-XXXXXXXX)"
    chmod 700 "$SUDO_ASKPASS_DIR" "$SUDO_ASKPASS"
    zsh -c "cat > '$SUDO_ASKPASS'" <<<"$SUDO_PASSWORD_SCRIPT"
    unset SUDO_PASSWORD_SCRIPT
    reset_debug

    export SUDO_ASKPASS
  fi
}

# Push current directory to Github
pushit() {
  DATE=$(date '+%y%m%d-%H%M')
  git pull 2>&1
  git add . 2>&1
  git commit -m "${DATE}" 2>&1
  git push 2>&1
}

sudo_refresh() {
  clear_debug
  if [ -n "$SUDO_ASKPASS" ]; then
    sudo --askpass --validate
  else
    sudo_init
  fi
  reset_debug
}

abort() {
  SYNC_STEP=""
  echo "!!! $*" >&2
  exit 1
}

log() {
  SYNC_STEP="$*"
  sudo_refresh
  echo "--> $*"
}

logn() {
  SYNC_STEP="$*"
  sudo_refresh
  printf -- "--> %s " "$*"
}

logk() {
  SYNC_STEP=""
  echo "OK"
}

[ "$USER" = "root" ] && abort "Run syncall as yourself, not root."
groups | grep $Q -E "\b(admin)\b" || abort "Add $USER to the admin group."


#-------------------------------------------------------------------------------
logn "Syncing dotfiles to macstrap:"
echo ""
sleep 1

# sync system dotfiles & backup scriptswith macstrap since they should match,
# excluding .git
# Note that this is one-way and I should only ever edit files in ~/.dotfiles
sudo_askpass rsync -rtu --exclude '.git' ~/.dotfiles/ ~/macstrap/dotfiles/ --progress
sudo_askpass rsync -rtu --exclude '.git' ~/.backup-scripts/ ~/macstrap/scripts/backup-scripts/ --progress

logk
sleep 1

#-------------------------------------------------------------------------------
# Push repos to Github using function pushit, which is located in .zshrc

echo "" && echo "Pushing .dotfiles to Github"
cd ~/.dotfiles && pushit
logk
sleep 0.5

echo "" && echo "Pushing .backup-scripts to Github"
cd ~/.backup-scripts && pushit
logk
sleep 0.5

echo "" && echo "Pushing macstrap to Github"
cd ~/macstrap && pushit
logk
sleep 0.5

echo "syncall " `date +"%y%m%d %r"` >> ~/Library/Logs/github-repo-backups.log

#-------------------------------------------------------------------------------
SYNC_SUCCESS="1"
log "Completed!"
